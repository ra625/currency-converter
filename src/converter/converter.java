/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package converter;
import java.net.URL;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.*;
import com.google.gson.*;
import org.json.*; 
import java.lang.*;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author PARAG
 */
public class converter extends javax.swing.JFrame {

    /**
     * Creates new form converter
     */
    
    public converter() {
        initComponents();
    }  
     public static double parseObject(JSONObject json,String key) throws JSONException
     {    double res=(double) json.get(key);
         return (res);
                
     }
     public void result(double rate){ 
         
     }
    
    public void getKey(JSONObject json,String key) throws JSONException
    {    
        
       boolean exists=json.has(key);
       Iterator<?> keys;
       String nextKeys;
       double rate=0;
       if(!exists)
       {  
           keys=json.keys();
           while(keys.hasNext())
           {
           nextKeys=(String)keys.next();
           try{   
               if(json.get(nextKeys) instanceof JSONObject)
               {    
                   if(exists==false)
                       getKey(json.getJSONObject(nextKeys),key);
                      
               }
               
               
           }catch(JSONException e){
           }
           }
       }
       else 
       { 
           
        rate=parseObject(json,key);
        double totalConvert = rate * Double.valueOf(curAmount.getText()).doubleValue();
        resultDisplay.setText(String.format("%,.2f",totalConvert));
        resrate.setText(String.format("%,.6f",rate));
        
       } 
       
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        curAmount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        curFrom = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        curTo = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        resultDisplay = new javax.swing.JTextField();
        resrate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter Amount");

        curAmount.setText("0");

        jLabel2.setText("Currency From");

        jLabel3.setText("Currency To");

        curFrom.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "AED-\tUAE Dirham\t", "ARS-\tArgentine Peso", "AUD-\tAustralian Dollar\t", "BGN-\tBulgarian Lev\t", "BRL-\tBrazilian Real", "BSD-\tBahamian Dollar\t", "CAD-\tCanadian Dollar", "CHF-\tSwiss Franc\t", "CLP-\tChilean Peso\t", "CNY-\tChinese Renminbi\t", "COP-\tColombian Peso", "CZK-\tCzech Korun", "DKK-\tDanish Krone", "DOP-\tDominican Peso\t", "EGP-\tEgyptian Pound", "EUR-\tEuro", "FJD-\tFiji Dollar\tFiji", "GBP-\tPound Sterling\t", "GTQ-\tGuatemalan Quetzal\t", "HKD-\tHong Kong Dollar\t", "HRK-\tCroatian Kuna\t", "HUF-\tHungarian Forint\t", "IDR-\tIndonesian Rupiah\t", "ILS-\tIsraeli New Shekel\t", "INR-\tIndian Rupee\t", "ISK-\tIcelandic Krona\t", "JPY-\tJapanese Yen\t", "KRW-\tSouth Korean Won\t", "KZT-\tKazakhstani Tenge\t", "MVR-\tMaldivian Rufiyaa", "MXN-\tMexican Peso\t", "MYR-\tMalaysian Ringgit", "NOK-\tNorwegian Krone\t", "NZD-\tNew Zealand Dollar\t", "PAB-\tPanamanian Balboa\t", "PEN-\tPeruvian Sol\t", "PHP-\tPhilippine Peso\t", "PKR-\tPakistani Rupee\t", "PLN-\tPolish Zloty", "PYG-\tParaguayan Guarani\t", "RON-\tRomanian Leu\t", "RUB-\tRussian Ruble\t", "SAR-\tSaudi Riyal\t", "SEK-\tSwedish Krona\t", "SGD-\tSingapore Dollar\t", "THB-\tThai Baht\tThailand", "TRY-\tTurkish Lira\t", "TWD-\tNew Taiwan Dollar\t", "UAH-\tUkrainian Hryvnia\t", "USD-\tUnited States Dollar\t", "UYU-\tUruguayan Peso\t", "ZAR-\tSouth African Rand\t", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(curFrom);

        curTo.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "AED-\tUAE Dirham\t", "ARS-\tArgentine Peso", "AUD-\tAustralian Dollar\t", "BGN-\tBulgarian Lev\t", "BRL-\tBrazilian Real", "BSD-\tBahamian Dollar\t", "CAD-\tCanadian Dollar", "CHF-\tSwiss Franc\t", "CLP-\tChilean Peso\t", "CNY-\tChinese Renminbi\t", "COP-\tColombian Peso", "CZK-\tCzech Korun", "DKK-\tDanish Krone", "DOP-\tDominican Peso\t", "EGP-\tEgyptian Pound", "EUR-\tEuro", "FJD-\tFiji Dollar\tFiji", "GBP-\tPound Sterling\t", "GTQ-\tGuatemalan Quetzal\t", "HKD-\tHong Kong Dollar\t", "HRK-\tCroatian Kuna\t", "HUF-\tHungarian Forint\t", "IDR-\tIndonesian Rupiah\t", "ILS-\tIsraeli New Shekel\t", "INR-\tIndian Rupee\t", "ISK-\tIcelandic Krona\t", "JPY-\tJapanese Yen\t", "KRW-\tSouth Korean Won\t", "KZT-\tKazakhstani Tenge\t", "MVR-\tMaldivian Rufiyaa", "MXN-\tMexican Peso\t", "MYR-\tMalaysian Ringgit", "NOK-\tNorwegian Krone\t", "NZD-\tNew Zealand Dollar\t", "PAB-\tPanamanian Balboa\t", "PEN-\tPeruvian Sol\t", "PHP-\tPhilippine Peso\t", "PKR-\tPakistani Rupee\t", "PLN-\tPolish Zloty", "PYG-\tParaguayan Guarani\t", "RON-\tRomanian Leu\t", "RUB-\tRussian Ruble\t", "SAR-\tSaudi Riyal\t", "SEK-\tSwedish Krona\t", "SGD-\tSingapore Dollar\t", "THB-\tThai Baht\tThailand", "TRY-\tTurkish Lira\t", "TWD-\tNew Taiwan Dollar\t", "UAH-\tUkrainian Hryvnia\t", "USD-\tUnited States Dollar\t", "UYU-\tUruguayan Peso\t", "ZAR-\tSouth African Rand\t", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(curTo);

        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        resultDisplay.setEditable(false);

        resrate.setEditable(false);

        jLabel4.setText("Final Amount");

        jLabel5.setText("Exchange Rate");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(curAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(resultDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resrate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(curAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         // Get the amount to convert
         String r="";
         
       String curAmountText = curAmount.getText();
       // Check for numbers only
       for(int i=0;i < curAmountText.length();i++)
       {
           if(!Character.isDigit(curAmountText.charAt(i)))
           {
               JOptionPane.showMessageDialog(this, "Please enter a valid amount!");
               curAmount.requestFocus();
               return;
           }
       }

       resultDisplay.setText("");

       // Get curreny from and to
       String curFromText   = curFrom.getSelectedValue().toString();
       String curToText     = curTo.getSelectedValue().toString();

       
       String curFromCode = curFromText.substring(0,3);
       resultDisplay.setText(curFromCode);
                     
       String curToCode = curToText.substring(0,3);
       
       
       try{  
           URL testurl=new URL("https://v6.exchangerate-api.com/v6/a999f8bdc1d3d837496facf6/latest/"+curFromCode);
		String readLine=null;
		HttpURLConnection connection=(HttpURLConnection) testurl.openConnection();
		connection.setRequestMethod("GET");
		connection.setRequestProperty("UserId","aqdc");
		int responseCode=connection.getResponseCode();
                           
             	
		if(responseCode==HttpURLConnection.HTTP_OK)
		{  
			BufferedReader in= new BufferedReader(new InputStreamReader(connection.getInputStream()));
			StringBuffer response=new StringBuffer();
			while((readLine=in .readLine())!=null) {
				response.append(readLine);
				
			} in.close();
             
            r=response.toString();
             
        
           
           
           
           
           
       }  
       
       
       }catch(Exception e){
           JOptionPane.showMessageDialog(this, "Unable to connect");
       } 
       System.out.println(r);
       Gson g=new Gson();
           String str=g.toJson(r);
           String inputjson=r;
        JSONObject inputjobj = null;
        try {
            inputjobj = new JSONObject(inputjson);
        } catch (JSONException ex) {
            Logger.getLogger(converter.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
        try {  
            getKey(inputjobj,curToCode);
                
        } catch (JSONException ex) {
            Logger.getLogger(converter.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
                                           
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new converter().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField curAmount;
    private javax.swing.JList<String> curFrom;
    private javax.swing.JList<String> curTo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField resrate;
    private javax.swing.JTextField resultDisplay;
    // End of variables declaration//GEN-END:variables
}
